
# 1) Definição de UPSTREAMS (nomes dos serviços Docker)

upstream webmail { server webmail:80; }
upstream portal  { server portal-isp:80; }

upstream cliente1 { server proxy-c1:80; }
upstream cliente2 { server proxy-c2:80; }
upstream cliente3 { server proxy-c3:80; }

# 2) Página PADRÃO (HTTP, porta 80)
#    Host padrão: qualquer nome não mapeado + asa.br/www.asa.br

server {
    listen       80 default_server;
    server_name  _ portal.br www.portal.br;

    access_log   /var/log/nginx/access.log  main;
    error_log    /var/log/nginx/error.log   debug;

    # Quando alguém acessar “/” neste host, serve a página estática de índice
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # 404 personalizado:
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

    # Páginas de erro 5xx (500, 502, 503, 504)
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Webmail
server {
    listen 80;
    server_name webmail.asa.br;
    location / {
        proxy_pass http://webmail;
    }
}

# Cliente 1
server {
    listen 80;
    server_name cliente1.asa.br;
    location / {
        proxy_pass http://cliente1;
    }
}

# Cliente 2
server {
    listen 80;
    server_name cliente2.asa.br;
    location / {
        proxy_pass http://cliente2;
    }
}

# Cliente 3
server {
    listen 80;
    server_name cliente3.asa.br;
    location / {
        proxy_pass http://cliente3;
    }
}


# 3) BLOCO PARA web1.asa.br (HTTP, porta 80)
#    Roteia todas as requisições para o serviço web1

server {
    listen       80;
    server_name  web1.asa.br;

    access_log   /var/log/nginx/access.log  main;
    error_log    /var/log/nginx/error.log   debug;

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Url-Scheme       $scheme;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host               $host;
        proxy_redirect     off;
        proxy_pass         http://web1;
    }
}


# 4) BLOCO PARA web2.asa.br (HTTP, porta 80)
#    Roteia todas as requisições para o serviço web2

server {
    listen       80;
    server_name  web2.asa.br;

    access_log   /var/log/nginx/access.log  main;
    error_log    /var/log/nginx/error.log   debug;

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Url-Scheme       $scheme;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host               $host;
        proxy_redirect     off;
        proxy_pass         http://web2;
    }
}
